sekilas algoritma penggunaan git:

1. buat folder/repo untuk menjalankan git
2. setelah itu tugasnya membuat folder .git di repo tsb. caranya masuk GIT BASH.
	lalu ketik cd tempat penyimpanan repo trsb. cth : cd D:
3. setelah masuk ke data D:, lalu di git bash ketik nama folder yang ingin kita jalankan 
	version control system. cth: cd percobaan-git

	CONTOH : cd 'Web PROGRAMMING'  atau cd D:/'Web PROGRAMMING'
4. buka folder tsb di software VS CODE. lalu buat file baru dengan eksternsi apapun.
	contoh: membuat file bru dengan nama index.html
5. lalu ketik di git bash dengan: git add index.html
6. lalu git status untuk mengecek statusnya.
7. lalu rubah isi dari file html tersebut, lalu kalau commitnya cuma satu baris maka:
	maka cth: git commit -m "Menambahkan tag H1 dan tag P"
8. git commit -m (atau -am) "....."  = berguna untuk melakukan commit.
9. git log = fungsinya untuk melihat seberapa banyak commit dan apa deskripsi commit yg dilakukan.
	git log -2 = untuk melihat 2 commit terakhir.
	git log --style.css = untuk melihat commit pada file yg bernama : style.css
	git checkout nomor (commit hashnya) = untuk mengembalikan semua commit sebelumnya
	git checkout nomor  (hashnya) -- (ketik nama filenya) = untuk mengembalikan commit hanya pada sebuah file saja.
10. git mv "nama file sumber yang ingin diganti" "nama file baru" = untuk mengganti nama file di github melalui git bash.
11. git push origin master/"main" = agar si master di web github mengetahui perubahan apa yang terjadi di git bash dll
	kalau tidak bisa, maka gunakan git push origin master --force

12. git rm -r <nama file> = untuk menghapus/delete folder di github melalui perintah git bash
13. git log = untuk menampilkan sejarah commit (baik yang kita buat ataupun yang orang lain buat)
14. git log -p = melihat apa yang dimodifikasi dari commit sebelumnya (melihat perubahan kodenya)